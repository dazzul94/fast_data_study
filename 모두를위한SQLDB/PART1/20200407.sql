create table tb_emp_recursive_test(
	employee_id serial primary key,
	full_name varchar not null,
	manager_id int
);

insert into tb_emp_recursive_test(
	employee_id, full_name, manager_id
)
values 
	(1, '김다솔1', null),
	(2, '김다솔2', 1),
	(3, '김다솔3', 1),
	(4, '김다솔4', 1),
	(5, '김다솔5', 1),
	(6, '김다솔6', 2),
	(7, '김다솔7', 2),
	(8, '김다솔8', 2),
	(9, '김다솔9', 2),
	(10, '김다솔10', 3),
	(11, '김다솔11', 3),
	(12, '김다솔12', 3),
	(13, '김다솔13', 3),
	(14, '김다솔14', 4),
	(15, '김다솔15', 4),
	(16, '김다솔16', 7),
	(17, '김다솔17', 7),
	(18, '김다솔18', 8),
	(19, '김다솔19', 8),
	(20, '김다솔20', 8);

select * from tb_emp_recursive_test;
-- manager_id가 없다 = owner

/* 1. 재귀 */
with recursive tmp1 as (
	select
		employee_id
		, manager_id
		, full_name
		, 0 lvl
	from tb_emp_recursive_test
	where manager_id is null -- 최상위 관리자부터 재귀 시작
	union
	select
		e.employee_id
		, e.manager_id
		, e.full_name
		, s.lvl + 1
	from
		tb_emp_recursive_test AS e
		, tmp1 as s
	where s.employee_id = e.manager_id -- 사원 ID와 관리자 ID 조인
)
select
	employee_id,
	manager_id,
	lvl,
	lpad(' ', 4 * (lvl)) || full_name AS full_name -- 좌측부터 '{띄어쓰기}'로 채워넣는데 그 칸은 4칸 기준씩
from tmp1;

/* 2. 김다솔2부터 재귀시작 */
with recursive tmp1 as (
	select 
		employee_id,
		manager_id,
		full_name,
		0 lvl
	from tb_emp_recursive_test
	where employee_id = 2 -- 김다솔2부터 재귀 시작
	union 
	select 
		e.employee_id,
		e.manager_id,
		e.full_name,
		s.lvl + 1
	from tb_emp_recursive_test e, tmp1 s
	where s.employee_id = e.manager_id
)
select 
	employee_id, 
	manager_id,
	lpad(' ', 4 * (lvl)) || full_name as full_name
from tmp1;
---------------------------------------------------------------------
/* ### BEGIN, COMMIT, ROLLBACK */
create table tb_account_transaction_test(
	id int generated by default as identity,
	name varchar(100) not null,
	balance dec(15, 2) not null,
	primary key(id)
);
commit;
-- postgresql은 ddl도 커밋을 해야한다.
-- 오라클은 ddl은 커밋을 할 필요가 없다!

begin; -- 생략가능
insert into tb_account_transaction_test(name, balance)
values ('Alice', 10000);
commit;

select * from tb_account_transaction_test;

begin; -- 생략가능
insert into tb_account_transaction_test(name, balance)
values ('John', 10000);
rollback;
------------------------------------------------------------------------
/* 1. 실습문제 1
 * - 아래 BASKET 테이블에서 FRUIT 컬럼이 중복된 행을 삭제하는 DELETE문을 작성하시오. 
 * 단 ,ROW_NUBMER()함수를 사용하시오. */
drop table basket;
create table basket(
	id serial primary key,
	fruit varchar(50) not null
);
insert into basket(fruit) values('Apple');
insert into basket(fruit) values('Apple');
insert into basket(fruit) values('Orange');
insert into basket(fruit) values('Orange');
insert into basket(fruit) values('Orange');
insert into basket(fruit) values('Banana');

commit;
select * from basket;

-- 내가 한거
delete from basket 
where id in (
	select
		id
	from (
		select 
			row_number() over(partition by fruit) row_num,
			id,
			fruit
		from basket
	) a
	where row_num != 1
)
	
-- 선생님이 한거
delete from basket 
where id in (
	select 
		id 
	from (
		select 
			row_number() over(partition by fruit) row_num,
			id,
			fruit
		from basket
	) a 
	where row_num > 1
);